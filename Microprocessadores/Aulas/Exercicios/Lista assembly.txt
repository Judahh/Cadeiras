Exercícios Práticos
Questão 1

.CHIP 8051

INICIO:MOV DPTR,#3000H
      MOV R0,#30H
      MOV A,#0CDH

Loop: MOVX @DPTR,A
      INC DPTR
      DJNZ R0,Loop
FIM:  SJMP INICIO


Questão 2

.CHIP 8051

MOV R0,#20H
MOV R1,#50
MOV A,#05H

Loop2:MOV @R0,A
      INC R0
      INC A
      CJNE A,#21H,Loop2
      MOV A,#05H

Loop1: DJNZ R1,Loop1
       SJMP $


Questão 3

.CHIP 8051


MOV DPTR,#4000H
MOV R1,#40H
MOV R7,#1FH

Loop: MOV A,@R1   
       MOVX @DPTR,A
       INC R1
       INC DPTR
       DJNZ R7,Loop
       SJMP $


4 - Leia a partir da posição de memória de programa 8000H a 801FH e copie para RAM interna a a partir do endereço 40H.

.CHIP 8051

MOV DPTR,#8000H
MOV R0,#40H
MOV R2,#1FH

Loop: CLR A
MOVC A,@A+DPTR
MOV @R0,A
INC R0
INC DPTR
DJNZ R2,Loop
SJMP $

Programação
1)???
2)???
3)
INICIO: 
MOV SP, #20H        (SP->Ponteiro de Pilha, muda de 07h para 20h)
MOV DPTR, #1234H    (DPTR->Ponteiro de 2 bytes recebe 1234h)
MOV A, #56          (A->Acumulador recebe 56)
MOV 01H, #02H       (01h->R1 recebe 02h)
MOV R0, A           (R0 recebe 56)
MOV @R1, A          (02h->R2 recebe 56)
PUSH DPH            (insere o valor de DPH na pilha)
PUSH DPL            (insere o valor de DPL na pilha)
PUSH ACC            (insere o valor de ACC na pilha)
PUSH PSW            (insere o valor de PSW na pilha)
MOV PSW, #00011000B (setamento de BITS e FLAGS)
MOV A, #78          (A->Acumulador recebe 78)
MOV R0, A           (R0 recebe 78)
MOV @R1, A          (02h->R2 recebe 78)
POP DPL             (retira o topo da pilha (PSW) e coloca no DPL)
POP DPH             (retira o topo da pilha (ACC) e coloca no DPH)
POP PSW             (retira o topo da pilha (DPL) e coloca no PSW)
POP ACC             (retira o topo da pilha (DPH) e coloca no ACC)
LJMP INICIO         (volta para o inicio)

setamento de BITS e FLAGS:
Carry=0
Carry auxiliar=0
Flag=0
Flag Bank1=1
Flag Bank0=1
//Banco 4 setado
Flag Overflow=0
bit=0
paridade=0


4)

BANK1:
CLR PSW.3/RS0
CLR PSW.4/RS1
RET

GET:
MOV R0,#32h
MOV R1,#E5h
RET

a)
CALL BANK1
CALL GET
MOV A,R0
MOV R0,R1
MOV R1,A

b)
CALL BANK1
CALL GET
PUSH R0
PUSH R1
POP R0
POP R1

c)
MOV A,36H
MOV 76H,A

d)
MOV A,36H
MOV R1,#76H
MOV @R1,A

e)
CLR  A
MOV  DPTR,0000H
MOVC A,@A+DPTR
MOV  DPTR,#2000H
MOVX @DPTR,A
MOV  DPTR,#3000H
MOVX @DPTR,A

f)
SQUARED:
MOV A,R0
MOV B,R0
MUL AB
MOV R1,B
MOV R2,A
RET


g)

.CHIP 8051


MOV B,A
MOV DPTR,#TABLE
Loop:CLR A
     MOVC A,@A+DPTR
     JZ INICIO
     CJE A,B,INCPONTEIRO
     INC DPTR
     CLR A
     MOVC A,@A+DPTR
     MOV B,A
     SJMP INICIO

INCPONTEIRO:INC DPTR
            INC DPTR
            SJMP Loop
              

TABLE: DB 10H,98H,20H,76H,30H,54H
       DB 40H,23H,0