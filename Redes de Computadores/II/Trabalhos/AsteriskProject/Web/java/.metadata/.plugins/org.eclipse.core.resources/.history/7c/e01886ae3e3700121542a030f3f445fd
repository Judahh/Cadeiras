package redes2;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class EXTContextFacade {
	private static List<EXTContext> contexts = new ArrayList<EXTContext>();

	public static List<EXTContext> getExtContext() {
		if (contexts.isEmpty()) {
			ArrayList<String> commands;
			ArrayList<EXTContextNumber> procedures;
			EXTContext context;

			procedures = new ArrayList<EXTContextNumber>();
			commands = new ArrayList<String>();
			commands.add("Answer()");
			commands.add("MusicOnHold(default,90)");
			commands.add("Hangup()");
			procedures.add(new EXTContextNumber("*35_", commands));

			commands = new ArrayList<String>();
			commands.add("Answer()");
			commands.add("MusicOnHold(default,90)");
			commands.add("Hangup()");
			procedures.add(new EXTContextNumber("*1", commands));

			context = new EXTContext("LOCAL", procedures);

			contexts.add(context);

			procedures = new ArrayList<EXTContextNumber>();
			commands = new ArrayList<String>();
			commands.add("Answer()");
			commands.add("Playback(vm-num-i-have)");
			commands.add("Wait()");
			commands.add("SayDigits(${CALLERID(num)}");
			commands.add("Hangup()");
			procedures.add(new EXTContextNumber("s", commands));

			context = new EXTContext("macro-dizramal", procedures);

			contexts.add(context);
		}
		return contexts;
	}

	public static void addExtContext(EXTContext extContext) {
		getExtContext().add(extContext);
	}

	public static void deleteExtContext(String extContextId) {
		EXTContext toRemove = null;

		for (EXTContext extContext : getExtContext()) {
			if (extContext.isSame(extContextId)) {
				toRemove = extContext;
			}
		}
		if (toRemove != null) {
			getExtContext().remove(toRemove);
		}
	}

	public static void updateExtContext(EXTContext extContext) {
		updateExtContext(extContext.getId(), extContext);
	}

	public static void updateExtContext(String extContextId,
			EXTContext extContext) {
		deleteExtContext(extContextId);
		addExtContext(extContext);
	}

	public static EXTContext getExtContextIaxRamal(String extContextId) {
		for (EXTContext extContext : getExtContext()) {
			if (extContext.isSame(extContextId)) {
				return extContext;
			}
		}
		return null;
	}

	public static void extContextSalvar(Map requestMap) {
		int i = 1;
		i = 2;
	}
}