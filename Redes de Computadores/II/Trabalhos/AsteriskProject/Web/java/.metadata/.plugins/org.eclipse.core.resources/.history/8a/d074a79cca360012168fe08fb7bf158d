<%@page import="com.sun.xml.internal.ws.api.streaming.XMLStreamReaderFactory.Default"%>
<%@page import="redes2.*" %>
<%
	//Action
String action = request.getParameter("action");
if(action != null && !action.isEmpty()){
	if ("iaxRamalDeletar".equals(action)) {
		IAXRamalFacade.deleteIaxRamal(request.getParameter("id"));
	} else if ("iaxRamalSalvar".equals(action)) {
		String id = request.getParameter("id");
		String newId = request.getParameter("newId");
		String callerid = request.getParameter("callerid");
		String type = request.getParameter("type");
		String defaultuser = request.getParameter("defaultuser");
		String secret = request.getParameter("secret");
		String context = request.getParameter("context");
		String host = request.getParameter("host");
		String auth = request.getParameter("auth");
		String transfer = "";
		if(request.getParameter("transfer") == null){
			transfer = "no";
		}else{
			transfer = "yes";
		}
		String requiredcalltoken = "";
		if(request.getParameter("requiredcalltoken") == null){
			requiredcalltoken = "no";
		}else{
			requiredcalltoken = "yes";
		}
		IAXRamalFacade.updateIaxRamal(id, new IAXRamal(newId, callerid, type, defaultuser, secret, context, host, auth, transfer, requiredcalltoken));
	} else if ("iaxConfigurationSalvar".equals(action)) {
		String newId = request.getParameter("newId");
		String port = request.getParameter("port");
		String bindaddr = request.getParameter("bindaddr");
		String context = request.getParameter("context");
		String bandwidth = request.getParameter("bandwidth");
		
		IAXConfigurationFacade.updateIaxConfiguration(new IAXConfiguration(newId, port, bindaddr, context, bandwidth, allow, tos));
		SIPConfigurationFacade.updateSipConfiguration(new SIPConfiguration(newId, context, bindport, bindaddr, tos_sip, tos_audio, tos_video, videosupport,t38p_udptl, allow, limitonpeers));
	}
}
%>