package redes2;

import java.util.ArrayList;
import java.util.List;

import util.imp.SipImp;
import util.interfaces.Sip;

public class SIPRamalFacade {
	private static List<SIPRamal> ramais = new ArrayList<SIPRamal>();
	private static Sip sip = new SipImp();

	// private static Sip sip = new SipImp();

	public static List<SIPRamal> getSipRamais() {
		// Local
		// if (ramais.isEmpty()) {
		// for (int i = 0; i < 3; i++) {
		// ramais.add(new SIPRamal("SIP-460" + i, "Ramal-SIP <4600>",
		// "friend", "4600", "1234", "no", "dynamic", "LOCAL",
		// "rfc2833", "2", "no"));
		// }
		// }
		// return ramais;

		try {
		} catch (Exception e) {
			e.printStackTrace();
		}
		List<SIPRamal> toReturn = new ArrayList<SIPRamal>();
		for (int i = 0; i < sip.getNumberOfSessions(); i++) {
			String sessionName = sip.getSessionName(i);
			toReturn.add(new SIPRamal(sessionName, sip.getVariableValue(
					sessionName, "callerid"), sip.getVariableValue(sessionName,
					"type"), sip.getVariableValue(sessionName, "username"), sip
					.getVariableValue(sessionName, "secret"), sip
					.getVariableValue(sessionName, "canreinvite"), sip
					.getVariableValue(sessionName, "host"), sip
					.getVariableValue(sessionName, "context"), sip
					.getVariableValue(sessionName, "dtmfmode"), sip
					.getVariableValue(sessionName, "call-limit"), sip
					.getVariableValue(sessionName, "nat")));

		}
		return toReturn;
	}

	public static void addSipRamal(SIPRamal sipRamal) {
		getSipRamais().add(sipRamal);
	}

	public static void deleteSipRamal(String sipRamalId) {
		SIPRamal toRemove = null;
		for (SIPRamal sipRamal : getSipRamais()) {
			if (sipRamal.isSame(sipRamalId)) {
				toRemove = sipRamal;
			}
		}
		if (toRemove != null) {
			getSipRamais().remove(toRemove);
		}
	}

	public static void updateSipRamal(SIPRamal sipRamal) {
		updateSipRamal(sipRamal.getId(), sipRamal);
	}

	public static void updateSipRamal(String sipRamalId, SIPRamal sipRamal) {
		deleteSipRamal(sipRamalId);
		addSipRamal(sipRamal);
	}

	public static SIPRamal getSipRamal(String sipRamalId) {
		for (SIPRamal sipRamal : getSipRamais()) {
			if (sipRamal.isSame(sipRamalId)) {
				return sipRamal;
			}
		}
		return null;
	}

	// public static List<String> getContexts(){
	//
	// }
}