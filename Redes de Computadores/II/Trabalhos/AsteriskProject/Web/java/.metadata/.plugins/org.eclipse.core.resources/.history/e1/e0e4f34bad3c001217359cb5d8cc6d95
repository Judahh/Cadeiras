package redes2.facade;

import java.util.ArrayList;
import java.util.List;

import redes2.Agent;
import redes2.QueueModel;
import redes2.util.StringUtil;
import util.imp.QueuesImp;
import util.interfaces.Queues;

public class QueuesFacade {
	private static List<QueueModel> agents = new ArrayList<QueueModel>();
	private static Queues que = new QueuesImp();
	
	private static boolean fake = true;

	public static List<QueueModel> getQueues() {
		if (fake) {
			if (agents.isEmpty()) {
//				agents.add(new Agent("000008", "123456", "Borne"));
			}
			return agents;
		} else {
			// List<Agent> toReturn = new ArrayList<Agent>();
			// for (int i = 0; i < agt.getNumberOfSessions(); i++) {
			// String sessionName = agt.getSessionName(i);
			// toReturn.add(new Agent(sessionName, agt.get
			// agents.add(new Agent("000007", "1234", "James Bond"));
			// }
			// return toReturn;
		}
		return null;
	}

	public static void addQueue(QueueModel queue) {
		if(!isValid(queue)){
			return;
		}
		if (fake) {
			getQueues().add(queue);
		} else {
			String id = queue.getId();
			agt.addSession(id);
			agt.addVariable(
					id,
					"agent",
					">" + agent.getId() + "," + agent.getSecret() + ","
							+ agent.getUsername());
		}
	}

	public static void deleteQueue(String queueId) {
		if(StringUtil.isEmpty(agentId)){
			return;
		}
		if (fake) {
			Agent toRemove = null;
			for (Agent agent : getAgents()) {
				if (agent.isSame(agentId)) {
					toRemove = agent;
				}
			}
			if (toRemove != null) {
				getAgents().remove(toRemove);
			}
		} else {
			// agt.removeSession(arg0)
			// agt.removeVariable(arg0, arg1)
		}
	}

	public static void updateQueue(QueueModel queue) {
		if(!isValid(agent)){
			return;
		}
		updateAgent(agent.getId(), agent);
	}

	public static void updateAgent(String queueId, QueueModel queue) {
		if(!isValid(agent)){
			return;
		}
		if(StringUtil.isEmpty(agentId)){
			return;
		}
		deleteAgent(agentId);
		addAgent(agent);
	}

	public static QueueModel getQueue(String queueId) {
		if(StringUtil.isEmpty(agentId)){
			return null;
		}
		if (fake) {
			for (Agent agent : getAgents()) {
				if (agent.isSame(agentId)) {
					return agent;
				}
			}
			return null;
		} else {
		}
		return null;
	}
	
	private static boolean isValid(QueueModel queue) {
		if (agent == null) {
			return false;
		}
		if (agent.getId() == null) {
			return false;
		}
		return true;
	}

}