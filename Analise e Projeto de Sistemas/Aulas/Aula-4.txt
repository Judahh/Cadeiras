A aula de 8/8/2012 focou no modelo de processo baseado em componentes e no desenvolvimento incremental. 
Iniciamos fazendo um resumo dos Modelos já estudados, Cascata e Evolucionário, mostrando aplicações e desvantagens de cada um. Depois mostramos uma situação real no qual os objetivos institucionais e do projeto estavam sendo distorcidos, em uma construção de artefatos que poderiam, com vantagens, ser adquiridos. Dessa forma, através desse exemplo, introduzimos o conceito de componente (diferente de framework) e da Engenharia de Software baseada em componentes, como uma forma de se ganhar tempo, qualidade, e custo no processo de software.


Em seguida, revisitamos e aprofundamos os principais pontos do Modelo baseado em componentes, especialmente o conceito e tipos de componentes COTS (de pequenos itens a subsistemas completos). A análise “Make/Buy/Reuse”, a adequação de requisitos e a preocupação em integrar componentes que muitas vezes não foram projetados para trabalhar juntos também foram discutidas.


Neste ponto fizemos um exercício, baseado em uma questão de uma avaliação de semestre anterior e discutimos a resposta.


Terminamos a aula abordamos sobre o conceito e as vantagens da abordagem iterativa (que pode ser aplicada a qualquer modelo de processo genérico), especificamente do desenvolvimento incremental: feedback, melhor provisionamento, teste das principais funcionalidades primeiro e com mais frequência, melhor motivação, etc . Demonstramos (matematicamente) que a complexidade dos sistemas pode ser melhor gerenciada através dessa abordagem, bem como através da componentização.


Para estudar os conteúdos dessas aulas de processo, reforçamos a leitura (1) do capítulo 2 de Processo da obra de Ian Sommerville, Software Engineering, 9th edition, publicada no Unifor On Line e (2) do capítulo 2 da obra de Martin Fowler, UML Distilled - UML essencial é o título em português.